<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="AddAttachment" xml:space="preserve">
    <value>Add Attachment</value>
  </data>
  <data name="AddEvent" xml:space="preserve">
    <value>Add Event</value>
  </data>
  <data name="admin" xml:space="preserve">
    <value>Hi!! admin</value>
  </data>
  <data name="Alreadyaccount" xml:space="preserve">
    <value>Already have an Account?</value>
  </data>
  <data name="Attachment" xml:space="preserve">
    <value>Attachment</value>
  </data>
  <data name="Button_Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="DateEvent" xml:space="preserve">
    <value>Enter Date For Event</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete Attachment</value>
  </data>
  <data name="Deletetask" xml:space="preserve">
    <value>Delete Task</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Add Event Details</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EnableReminder" xml:space="preserve">
    <value>Enable Reminder:</value>
  </data>
  <data name="EntereventDescription" xml:space="preserve">
    <value>Enter Event Description (Max 250 words)</value>
  </data>
  <data name="EnterEventname" xml:space="preserve">
    <value>Enter Event Name</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>An error occurred. Please try again.</value>
  </data>
  <data name="Error_login" xml:space="preserve">
    <value>Incorrect Username or Password.Please try again.</value>
  </data>
  <data name="Error_password" xml:space="preserve">
    <value>Enter Correct Password</value>
  </data>
  <data name="Error_Username" xml:space="preserve">
    <value>Enter Correct Username</value>
  </data>
  <data name="EventDescription" xml:space="preserve">
    <value>Event Description</value>
  </data>
  <data name="Eventlist" xml:space="preserve">
    <value>Event List</value>
  </data>
  <data name="Eventname" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="Label_Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Label_Sort" xml:space="preserve">
    <value>Sort Task</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Mark" xml:space="preserve">
    <value>Mark as Done</value>
  </data>
  <data name="Markeddone" xml:space="preserve">
    <value>Marked as done!</value>
  </data>
  <data name="Markednotdone" xml:space="preserve">
    <value>Marked as not done!</value>
  </data>
  <data name="New_User" xml:space="preserve">
    <value>New User</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Notfound" xml:space="preserve">
    <value>No Attachment found. If attachment is already added, click save.</value>
  </data>
  <data name="Nothingtoshow" xml:space="preserve">
    <value>Nothing to show yet, Create an item by tapping on +</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Photopath" xml:space="preserve">
    <value>Failed to save photo</value>
  </data>
  <data name="PinPriority" xml:space="preserve">
    <value>Pin For Priority</value>
  </data>
  <data name="Pinstatus" xml:space="preserve">
    <value>Failed to update task pin status:</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegistrationSuccsess" xml:space="preserve">
    <value>Registration successful! You can now log in.</value>
  </data>
  <data name="Repeat" xml:space="preserve">
    <value>Repeat Everyday Untill Due:</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Saveevent" xml:space="preserve">
    <value>Save Event</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Selectdate" xml:space="preserve">
    <value>Select Date:</value>
  </data>
  <data name="SelectImage" xml:space="preserve">
    <value>Select an image</value>
  </data>
  <data name="Selecttask" xml:space="preserve">
    <value>Please select a task for the reminder.</value>
  </data>
  <data name="Selecttime" xml:space="preserve">
    <value>Select Time:</value>
  </data>
  <data name="Setreminder" xml:space="preserve">
    <value>Set Reminder</value>
  </data>
  <data name="Signin" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Select an image</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TakePhoto" xml:space="preserve">
    <value>Take Photo</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Task name or ID</value>
  </data>
  <data name="Taskcreated" xml:space="preserve">
    <value>Task created!</value>
  </data>
  <data name="TaskCreation" xml:space="preserve">
    <value>Task Creation</value>
  </data>
  <data name="TaskDescription" xml:space="preserve">
    <value>TaskDescription</value>
  </data>
  <data name="Tasknotselected" xml:space="preserve">
    <value>No Task Selected</value>
  </data>
  <data name="Tasktitle" xml:space="preserve">
    <value>Enter the Task Title</value>
  </data>
  <data name="Taskupdated" xml:space="preserve">
    <value>Task updated!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleandDescriptionerror" xml:space="preserve">
    <value>Task Title and Description are required.</value>
  </data>
  <data name="UploadAttachmnet" xml:space="preserve">
    <value>Upload Attachment</value>
  </data>
  <data name="Userexist" xml:space="preserve">
    <value>User already exists.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernotExist" xml:space="preserve">
    <value>User does not exist. Unable to update.</value>
  </data>
  <data name="UserUpdated" xml:space="preserve">
    <value>User Information Updated Successfully.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>